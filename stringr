library(stringr)

fruits <- c("apple", "Apple", "banana", "pineapple")

# str_c( ) – 문자열을 합치기 
str_c("apple", "banana")
str_c("Fruit: ", fruits)

str_c(fruits, collapse="")
str_c(fruits, collapse="-")

# str_length( ) – 문자열의 길이 출력하기
str_length("apple")
str_length(fruits)
length(fruits)


# str_detect( ) – 특정 문자 포함 여부 확인 

# 대문자 A 가 있는 단어 찾기 
str_detect(fruits, "A") 
# 첫 글자가 소문자 a 인 단어 찾기 
str_detect(fruits, "^a") 
# 끝나는 글자가 소문자 e 인 단어 찾기 
str_detect(fruits, "e$") 
# 시작하는 글자가 대문자 A 나 소문자 a 인 단어 찾기 
str_detect(fruits, "^[aA]") 
# 단어에 소문자 a와 대문자 A 가 들어 있는 단어 찾기 
str_detect(fruits, "[aA]")


# str_replace( ) 
str_replace("apple", "p", "*") 
str_replace("apple", "p", "**") 
str_replace_all("apple", "p", "*") 


# str_remove() – 문자열 제거 
str_remove("apple", "p") 
str_remove_all("apple", "p") 

# str_trim( ) – 공백 제거하기 
str_trim("  apple banana berry  ")

# str_count( ) – 특정 문자 출현 횟수 세기 
str_count(fruits, "a")
str_count(fruits, fixed('a', ignore_case=F))
str_count(fruits, fixed('a', ignore_case=T))

# str_split( ) 
fruits <- “apple, orange, banana” 
str_split(fruits, ",") # , 기호를 기준으로 분리 

# str_sub( ) 
str_sub(fruits, start=1, end=3) 
str_sub(fruits, start=6, end=9) 
str_sub(fruits, start=-5)  #  -는 뒤에서부터 시작

